.wp-block-media-text {
  display: grid;
  grid-template-rows: auto;

  grid-template-columns: 50% 1fr;


  .has-media-on-the-right {
    grid-template-columns: 1fr 50%;
  }

  &.alignfull {
    padding-left: $grid-gutter-width/2;
    padding-right: $grid-gutter-width/2;
  }
}

.wp-block-media-text.is-vertically-aligned-top {
  .wp-block-media-text__content,
  .wp-block-media-text__media {
    align-self: start;
  }
}
.wp-block-media-text,
.wp-block-media-text.is-vertically-aligned-center {
  .wp-block-media-text__content,
  .wp-block-media-text__media {
    align-self: center;
  }
}

.wp-block-media-text.is-vertically-aligned-bottom {
  .wp-block-media-text__content,
  .wp-block-media-text__media {
    align-self: end;
  }
}

.wp-block-media-text .wp-block-media-text__media {
  grid-column: 1;
  grid-row: 1;
  height: 100%;
  margin: 0;
}

.wp-block-media-text .wp-block-media-text__content {
  grid-column: 2;
  grid-row: 1;
  word-break: break-word;

  padding: 0 0 0 $grid-gutter-width;


}

.wp-block-media-text {

  &.has-media-on-the-right {
    .wp-block-media-text__content {
      padding: 0 $grid-gutter-width 0 0 ;
    }
  }

}



.wp-block-media-text.has-media-on-the-right .wp-block-media-text__media {
  grid-column: 2;
  grid-row: 1;
}

.wp-block-media-text.has-media-on-the-right .wp-block-media-text__content {
  grid-column: 1;
  grid-row: 1;
}

.wp-block-media-text > figure > img,
.wp-block-media-text > figure > video {
  max-width: unset;
  width: 100%;
  vertical-align: middle;
  height: 100%;
  object-fit: cover;
}

.wp-block-media-text.is-image-fill figure {
  height: 100%;
  min-height: 250px;
  background-size: cover;
}

.wp-block-media-text.is-image-fill figure > img {
  // The image is visually hidden but accessible to assistive technologies.
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
/*
* Here we here not able to use a mobile first CSS approach.
* Custom widths are set using inline styles, and on mobile,
* we need 100% width, so we use important to overwrite the inline style.
* If the style were set on mobile first, on desktop styles,
* we would have no way of setting the style again to the inline style.
*/
@media (max-width: $layout-width / 2 ) {


  .wp-block-media-text.is-stacked-on-mobile {
    grid-template-columns: 100% !important;
    .wp-block-media-text__media {
      grid-column: 1;
      grid-row: 1;
    }
    .wp-block-media-text__content {
      grid-column: 1;
      grid-row: 2;
      padding-top: $grid-gutter-width;
      padding-bottom: $grid-gutter-width;
    }
  }

  .wp-block-media-text.is-stacked-on-mobile.has-media-on-the-right {
    .wp-block-media-text__media {
      grid-column: 1;
      grid-row: 2;
    }
    .wp-block-media-text__content {
      grid-column: 1;
      grid-row: 1;
    }
  }
}



